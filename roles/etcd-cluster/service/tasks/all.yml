- name: Get DEB architecture
  shell: dpkg --print-architecture
  register: deb_architecture

- name: "get etcd component"
  get_url:
    url: "{{ download_url }}/v{{ etcd_ver }}/etcd-v{{ etcd_ver }}-linux-{{ deb_architecture.stdout }}.tar.gz"
    dest: "/tmp/"
  # when: not check_cfssl.stat.exists

- name: Extract etcd.tar.gz
  unarchive:
    src: "/tmp/etcd-v{{ etcd_ver }}-linux-{{ deb_architecture.stdout }}.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: copy to /usr/local/bin
  copy:
    src: "/tmp/etcd-v{{ etcd_ver }}-linux-{{ deb_architecture.stdout }}/{{ item }}"
    dest: /usr/local/bin/
    remote_src: yes
  loop:
    - etcd
    - etcdctl

- name: Ensure group "etcd" exists
  ansible.builtin.group:
    name: etcd
    state: present

- name: Add the user 'etcd'
  ansible.builtin.user:
    name: etcd
    group: etcd
    system: yes
    create_home: no
    shell: /sbin/nologin

- name: Create /var/lib/etcd/ directory
  file:
    path: /var/lib/etcd/
    state: directory
    mode: '0700'
    owner: etcd
    group: etcd

- name: Create /var/lib/etcd/ directory
  file:
    path: /etc/etcd/pki/
    state: directory
    owner: etcd
    group: etcd

- name: copy certificate to others
  copy:
    src: "{{ folder_path}}{{ item }}"
    dest: /etc/etcd/pki/
    owner: etcd
    group: etcd
  loop:
    - ca.pem
    - etcd.pem
    - etcd-key.pem

- name: create the etcd.service systemd unit file
  template:
    src: etcd.j2
    dest: "/etc/systemd/system/etcd.service"

- name: Enable and check etcd service
  systemd:
    name: etcd
    daemon_reload: yes
    state: started
    enabled: yes

